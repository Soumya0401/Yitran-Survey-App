name: Yitran-Survey-App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  android-tests:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up JDK 21 (since your Maven project needs it)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      # Step 3: Install Android SDK
      - name: Install Android SDK
        uses: android-actions/setup-android@v3

      # Step 4: Set ANDROID_HOME and update PATH
      - name: Set ANDROID_HOME and update PATH (Windows)
        run: |
          echo "ANDROID_HOME=$env:ANDROID_SDK_ROOT" >> $env:GITHUB_ENV
          echo "$env:ANDROID_SDK_ROOT\platform-tools" >> $env:GITHUB_PATH
        shell: pwsh

      # Step 5: Install required system image & tools
      - name: Install system image
        run: sdkmanager "system-images;android-30;google_apis;x86_64" "platforms;android-30" "platform-tools"
        shell: bash

      # Step 6: Create Emulator
      - name: Create Emulator
        run: avdmanager create avd -n testEmulator -k "system-images;android-30;google_apis;x86_64" --device pixel --force
        shell: bash

      # Step 7: Start Emulator
      - name: Start Emulator
        run: Start-Process -FilePath emulator -ArgumentList "-avd testEmulator -no-window -no-audio -no-boot-anim -gpu off" -NoNewWindow
        shell: pwsh

      - name: Wait for device
        run: |
          adb wait-for-device
          adb shell input keyevent 82
        shell: bash

      # Step 8: Set up Node.js (for Appium server)
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Install Appium server
        run: |
          npm install -g appium@2.11.3
          appium driver install uiautomator2
        shell: bash

      # Step 9: Start Appium server in background
      - name: Start Appium server
        run: |
          nohup appium --base-path /wd/hub --log-level info > appium.log 2>&1 &
        shell: bash

      # Step 10: Build project with Maven (skip tests first)
      - name: Build with Maven
        run: mvn clean install -DskipTests=true

      # Step 11: Run Appium + Selenium + Cucumber Tests
      - name: Run Tests
        run: mvn test

      # Step 12: Upload Cucumber test reports
      - name: Upload Test Reports
        uses: actions/upload-artifact@v4
        with:
          name: cucumber-reports
          path: target/cucumber-reports/
